@model IEnumerable<DotNetStackUnderFlow.Entities.Response>

@{
    ViewData["Title"] = "Index";
}

<h2>Responses</h2>
<script>
    function upVote(upVoteFieldId) {
        document.getElementById(upVoteFieldId).value++;
        document.getElementById(upVoteFieldId + "upVoteButton").disabled = true;
    }
    function downVote(questionId) {
        document.getElementById(questionId + "down").value++;
        document.getElementById(questionId + "downVoteButton").disabled = true;
    }
 </script>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.QuestionId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Body)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSolution)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpVotes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DownVotes)
            </th>

        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuestionId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Body)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsSolution)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpVotes)
                @*<input readonly id="@item.Id" value="@item.UpVotes" />*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DownVotes)
                @*<input readonly id="@($"{item.Id}down")" value="@item.DownVotes" />*@
            </td>
            <td>
            @*<button onclick="upVote(@item.Id)" class="btn btn-info btn-xs" id="@($"{item.Id}upVoteButton")" type="submit"> UpVote</button>
            <button onclick="downVote(@item.Id)" class="btn btn-danger btn-xs" id="@($"{item.Id}downVoteButton")" type="submit"> DownVote</button>*@

            @*<td>
            @using (Html.BeginForm("UpVote", "Response", FormMethod.Post))
            {
                <input hidden value="@item.Id" name="id" />
                <button class="btn btn-info btn-xs" id="@item.Id" type="submit">UpVote</button>
            }
        </td>
        <td>
            @using (Html.BeginForm("DownVote", "Response", FormMethod.Post))
            {
                <input hidden value="@item.Id" name="id" />
                <button class="btn btn-danger btn-xs" id="@item.Id" type="submit">DownVote</button>
            }
        </td>*@

            <a asp-action="Edit" asp-route-id="@item.Id">Vote/Mark As Solution/Edit</a> |
            <a asp-action="Details" asp-route-id="@item.Id">See Comments</a> |
            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
