@using DotNetStackUnderFlow.Entities;
@model DotNetStackUnderFlow.Entities.Question

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Question</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Body)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.UpVotes)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.UpVotes)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.DownVotes)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DownVotes)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.UserId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.UserId)
        </dd>
      
    </dl>
</div>

<div>
    <p style="font-weight:bold">Responses</p>
    <hr/>
    @foreach (var response in Model.Responses)
    {
        <span>@Html.DisplayFor(modelItem => response.Body) -</span>
        <span>@Html.DisplayFor(modelItem => response.Title) -</span>
        <span>@Html.DisplayFor(modelItem => response.UpVotes) - </span>
        <span>@Html.DisplayFor(modelItem => response.DownVotes)</span>
    }
</div>
@*<div class="comments">

    <partial name="createresponse" model="new response(){ questionid = model.id }" />

    <partial name="responses" model="model.responses" />

</div>*@


<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
